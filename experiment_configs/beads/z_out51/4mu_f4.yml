precision: &precision float
nnum: &nnum 19
z_out: &z_out 51

toolbox: # defines yaml placeholders
  interpol: &interpol 2
  ls_roi: &ls_roi [[0, null], [35, -35], [8, -8], [8, -8]]
  metrics: &metrics
    MSSSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, size_average: true, val_range: null, normalize: false}
    SSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, window: null, size_average: true, full: false, val_range: null}
    NRMSE: {tensor_names: {y_pred: pred, y: ls}}
    PSNR: {tensor_names: {y_pred: pred, y: ls}, data_range: null}
    BeadPrecision: &bead_metric_kwargs
      tensor_names: {y_pred: pred, y: ls, meta: meta}
      dist_threshold: 3.0
      scaling: [2., 1.4, 1.4]
      min_sigma: 1.0
      max_sigma: 6.0
      sigma_ratio: 3.0
      threshold: .05
      overlap: 0.5
      exclude_border: false
    BeadRecall: *bead_metric_kwargs
    SmoothL1Loss: {tensor_names: {y_pred: pred, y: ls}}
    MSELoss: {tensor_names: {y_pred: pred, y: ls}}

  eval_batch_size: &eval_batch_size 2
  sample_trfs: &sample_trfs
    - Resize: {apply_to: ls, shape: [1.0, 0.14439140811455847255369928400955, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947, ], order: 2}  # 2/19=0.10526315789473684210526315789474; 4/19=0.21052631578947368421052631578947; 8/19=0.42105263157894736842105263157895; 121/838=0.14439140811455847255369928400955
    - Assert: {apply_to: ls, expected_tensor_shape: [null, 1, 121, null, null]}
  eval_sample_prepr: &eval_sample_prepr
    - Crop: {apply_to: ls, crop: *ls_roi}
    - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
    - Normalize01: {apply_to: ls, min_percentile: 5.0, max_percentile: 99.99}
    - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
    - Assert: {apply_to: lfc, expected_tensor_shape: [null, 361, null, null]}
  eval_batch_prepr: &eval_batch_prepr []
  batch_prepr_in_step: &batch_prepr_in_step
    - Cast: {apply_to: [lfc, ls], dtype: *precision, device: cuda, non_blocking: true}
  batch_postpr: &batch_postpr
    - Assert: {apply_to: pred, expected_tensor_shape: [null, 1, null, null, null]}

model:
  name: A04
  kwargs:
    input_name: lfc
    prediction_name: pred
    nnum: *nnum
    z_out: *z_out
    n_res2d: [488, 488, u, 244, 244]
  checkpoint: [logs, beads/z_out51/4mu_f4/20-04-28_10-23-55/train/checkpoints/v1_checkpoint_SmoothL1Loss=-5.5897066583080836e-05.pth]

stages:
  - test:
      metrics: *metrics
      log:
        TqdmLogger: {}
        TensorBoardLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: epoch}
          tensor_names: [lf, pred, ls]
        FileLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: iteration}
          tensor_names: [lf, pred, ls]
      batch_preprocessing: *eval_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step
      batch_postprocessing: *batch_postpr
      data:
        - batch_size: *eval_batch_size
          interpolation_order: *interpol
          sample_preprocessing: *eval_sample_prepr
          datasets:
            - {tensors: {lf: beads.b4mu_3_lf, ls: beads.b4mu_3_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs, indices: 0-35}

  - test_on_01highc:
      metrics: *metrics
      log:
        TqdmLogger: {}
        TensorBoardLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: epoch}
          tensor_names: [lf, pred, ls]
        FileLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: iteration}
          tensor_names: [lf, pred, ls]
      batch_preprocessing: *eval_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step
      batch_postprocessing: *batch_postpr
      data:
        - batch_size: *eval_batch_size
          interpolation_order: *interpol
          sample_preprocessing: *eval_sample_prepr
          datasets:
            - {tensors: {lf: beads.b01highc_1_lf, ls: beads.b01highc_1_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
