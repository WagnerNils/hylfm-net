precision: &precision float
nnum: &nnum 19
z_out: &z_out 49

toolbox:
#  lf_crop: &lf_crop [[0, 0], [0, 0], [0, 0]]
  ls_crop: &ls_crop [[0, 0], [3, 219], [20, -117], [87, -41]]
  pred_crop: &pred_crop [[0, 0], [0, 0], [0, 0], [0, 0]]
  metrics: &metrics {}
#    MSSSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, size_average: true, val_range: null, normalize: false}
#    SSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, window: null, size_average: true, full: false, val_range: null}
#    NRMSE: {tensor_names: {y_pred: pred, y: ls}}
#    PSNR: {tensor_names: {y_pred: pred, y: ls}, data_range: null}
#    BeadPrecision: {tensor_names: {y_pred: pred, y: ls}, dist_threshold: &beadPR 5.0}
#    BeadRecall: {tensor_names: {y_pred: pred, y: ls}, dist_threshold: *beadPR}
#    SmoothL1Loss: {tensor_names: {y_pred: pred, y: ls}}
#    MSELoss: {tensor_names: {y_pred: pred, y: ls}}

  eval_log: &eval_log
    TqdmLogger:
      scalars_every: {value: 1, unit: iteration}
      tensors_every: {value: 1, unit: epoch}
    TensorBoardLogger:
        scalars_every: {value: 1, unit: iteration}
        tensors_every: {value: 1, unit: epoch}
    FileLogger:
      scalars_every: {value: 1, unit: iteration}
      tensors_every: {value: 1, unit: iteration}
      tensor_names: {lr, ls}

#    tensors: {lf: {}, lfn: {}, lfc: {}, pred: {}, ls: {}, lsn: {}}
  eval_batch_preprocessing: &eval_batch_preprocessing
    - Cast: {apply_to: [lr, ls], dtype: *precision, device: cuda}
  eval_batch_size: &eval_batch_size 2
  eval_sample_transforms: &eval_sample_transforms
    - Normalize01: {apply_to: ls, min_percentile: 0, max_percentile: 100}
    - Normalize01: {apply_to: lr, min_percentile: 0, max_percentile: 100}
#    - Normalize01: {apply_to: {lf: lfn}, min_percentile: 5.0, max_percentile: 99.8}
#    - Normalize01: {apply_to: {ls: lsn}, min_percentile: 5.0, max_percentile: 99.99}
#    - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
    - Crop: {apply_to: ls, crop: *ls_crop}
    - Resize: {apply_to: ls, shape: [1.0, *z_out, .5, .5], order: 2}

model:
  name: Dummy
  kwargs:
    interpolation_order: &interpol 2
#    input_name: lfc
#    prediction_name: pred
#    n_res2d: [16, 16, u, 8, 8]
#    inplanes_3d: 4
#    n_res3d: [[4, 2], [1]]
#    final_activation: null
#    nnum: *nnum
#    z_out: *z_out
#  checkpoint: /g/kreshuk/beuttenm/repos/lnet/logs/fish/fdyn1_a02/20-02-21_08-54-55/models/v0_model_4.pth

stages:
- test:
    metrics: *metrics
    log: *eval_log
    batch_preprocessing: *eval_batch_preprocessing
    batch_postprocessing:
      - AffineTransformation:
          apply_to: lr
          target_to_compare_to: ls
          order: 2
          input_shape: [838, 1330, 1615]
          output_shape: [241, 1501, 1801]
          matrices: [[0.98048,0.004709,0.098297,-111.7542,7.6415e-05,0.97546,0.0030523,-20.1143,0.014629,8.2964e-06,-3.9928,846.8515]]
          crop_out: *ls_crop
          crop_in: *pred_crop
    data:
      - batch_size: *eval_batch_size
        interpolation_order: *interpol
        sample_transforms: *eval_sample_transforms
        datasets:
          - {tensors: {lr: gcamp.ref0_lr, ls: gcamp.ref0_ls}, interpolation_order: *interpol, indices: 0, z_crop: [3, 219]}
#          - {tensors: {lf: gcamp.ref0_lf, lr: gcamp.ref0_lr, ls: gcamp.ref0_ls}, interpolation_order: *interpol, indices: 0}
