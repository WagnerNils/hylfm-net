precision: &precision float
nnum: &nnum 19
z_out: &z_out 49

toolbox:
  interpol: &interpol 2
#  ls_z_min: &ls_z_min 0  # 60
#  ls_z_max: &ls_z_max 49  # 181
  lr_crop: &lr_crop [[0, null], [0, null], [0, null], [0, null]]
#  lr_crop: &lr_crop [[0, null], [0, null], [133, 1121], [323, 1596]]
  lr_crop: &ls_crop [[0, null], [0, null], [0, null], [0, null]]
#  ls_crop: &ls_crop [[0, null], [60, -60], [32, -72], [92, -20]]

  metrics: &metrics {}
  eval_log: &eval_log
    TqdmLogger: {}
    FileLogger:
      scalars_every: {value: 1, unit: epoch}
      tensors_every: {value: 1, unit: iteration}
      tensor_names: {lr, lr_trf, ls}

  eval_batch_size: &eval_batch_size 2
  sample_trfs: &sample_trfs
    - Assert: {apply_to: lr, expected_tensor_shape: [null, 1, *z_out, null, null]}
    - Resize: {apply_to: ls, shape: [1.0, *z_out, 0.21052631578947368421052631578947, 0.21052631578947368421052631578947], order: 2}  # 2/19=0.10526315789473684210526315789474; 4/19=0.21052631578947368421052631578947; 8/19=0.42105263157894736842105263157895
    - Assert: {apply_to: ls, expected_tensor_shape: [null, 1, *z_out, null, null]}

  eval_sample_prepr: &eval_sample_prepr
    - Crop: {apply_to: lr, crop: *lr_crop}
    - Crop: {apply_to: ls, crop: *ls_crop}
    - Normalize01: {apply_to: ls, min_percentile: 0, max_percentile: 100}
    - Normalize01: {apply_to: lr, min_percentile: 0, max_percentile: 100}

  batch_prepr_in_step: &batch_prepr_in_step
    - Cast: {apply_to: [lr], dtype: *precision, device: cuda, non_blocking: True}

  eval_batch_prepr: &eval_batch_prepr []
  batch_postpr: &batch_postpr
    - AffineTransformation:
        apply_to: {lr: lr_trf}
        target_to_compare_to: ls
        order: 2
        ref_input_shape: [838, 1330, 1615]
        bdv_affine_transformations: [[0.98048,0.004709,0.098297,-111.7542,7.6415e-05,0.97546,0.0030523,-20.1143,0.014629,8.2964e-06,-3.9928,846.8515]]
        ref_output_shape: [241, 1501, 1801]
        ref_crop_in: [[0, null], [0, null], [0, null]]  # 463x988x1273 - 0x0x0 no excess shrinkage: 2*19/19*4,2*19/19*4 - 8,8
#        ref_crop_in: [[152, -223], [133, 1121], [323, 1596]]  # 463x988x1273 - 0x0x0 no excess shrinkage: 2*19/19*4,2*19/19*4 - 8,8
        ref_crop_out: [[0, null], [0, null], [0, null]]  # 121x1026x1326 /19*4 121x...
#        ref_crop_out: [[*ls_z_min, *ls_z_max], [152, -323], [418, -57]]  # 121x1026x1326 /19*4 121x...

model:
  name: Dummy
  kwargs: {}

stages:
#  - original_beads:
#      metrics: *metrics
#      log: *eval_log
#      batch_preprocessing: *eval_batch_prepr
#      batch_preprocessing_in_step: *batch_prepr_in_step
#      batch_postprocessing: *batch_postpr
#      data:
#        - batch_size: *eval_batch_size
#          interpolation_order: *interpol
#          sample_preprocessing: *eval_sample_prepr
#          datasets:
#            - tensors:
#                lr:
#                  name: lr
#                  root: GKRESHUK
#                  location: LF_computed/TestOutputGcamp/LenseLeNet_Microscope/20200311_Gcamp/Beads/2020-03-11_01.43.21/stack_0_channel_0/SinglePlane_-450/TP_00000/RCout/Cam_Right_001.tif
#                  insert_singleton_axes_at: [0, 0]
#                  transformations:
#                    - Assert: {apply_to: lr, expected_tensor_shape: [1, 1, null, null, null]}
#                  tag: affine
#                ls:
#                  name: ls
#                  root: GKRESHUK
#                  location: LF_partially_restored/LenseLeNet_Microscope/20200311_Gcamp/Beads/2020-03-11_01.43.21/stack_1_channel_1/Cam_Left_*.h5/Data
#                  insert_singleton_axes_at: [0, 0]
#                  transformations:
#                    - Assert: {apply_to: ls, expected_tensor_shape: [1, 1, null, null, null]}
#                    - FlipAxis: {apply_to: ls, axis: 2}
#                    - Crop: {apply_to: ls, crop: [[0, null], [0, null], [273, 1774], [123, 1924]]}
#                  tag: affine
#              interpolation_order: *interpol
#              sample_transformations: *sample_trfs

  - beads_after_fish:
      metrics: *metrics
      log: *eval_log
      batch_preprocessing: *eval_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step
      batch_postprocessing: *batch_postpr
      data:
        - batch_size: *eval_batch_size
          interpolation_order: *interpol
          sample_preprocessing: *eval_sample_prepr
          datasets:
            - tensors:
                lr:
                  name: lr
                  root: GKRESHUK
                  location: LF_partially_restored/TestOutputGcamp/LenseLeNet_Microscope/20200311_Gcamp/fish2/beads_after_fish/2020-03-11_10.45.34/stack_0_channel_0/SinglePlane_-450/TP_00000/RCout/Cam_Right.tif
                  insert_singleton_axes_at: [0, 0]
                  transformations:
                    - Assert: {apply_to: lr, expected_tensor_shape: [1, 1, null, null, null]}
                  tag: affine
                ls:
                  name: ls
                  root: GKRESHUK
                  location: LF_partially_restored/LenseLeNet_Microscope/20200311_Gcamp/fish2/beads_after_fish/2020-03-11_10.45.34/stack_1_channel_1/Cam_Left_*.h5/Data
                  insert_singleton_axes_at: [0, 0]
                  transformations:
                    - Assert: {apply_to: ls, expected_tensor_shape: [1, 1, null, null, null]}
                    - FlipAxis: {apply_to: ls, axis: 2}
                    - Crop: {apply_to: ls, crop: [[0, null], [0, null], [273, 1774], [123, 1924]]}
                  tag: affine
              interpolation_order: *interpol
              sample_transformations: *sample_trfs
