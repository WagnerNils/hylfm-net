precision: &precision float
nnum: &nnum 19
z_out: &z_out 51

toolbox: # defines yaml placeholders
  interpol: &interpol 2
  # lf_crop no shrinkage: &lf_crop [[0, null], [133, 1121], [323, 1596]]  # [133, 1121], [323, 1596] / 19 = [7, 59], [17, 84] # max: 70, 85
  lf_crop: &lf_crop [[0, null], [76, 1178], [266, 1615]]  # f2 shrinkage: 6/2*19 = 38; lenslets cut: (3, 3), (3, 1)
#   lf_crop: &lf_crop [[0, null], [95, 1159], [266, 1615]]  # f4 shrinkage: 8/4*19 = 38; lenslets cut: (2, 2), (2, 1)
#   lf_crop: &lf_crop [[0, null], [114, 1140], [304, 1615]]  # f8 shrinkage: 8/8*19 = 19; lenslets cut: (1, 1), (1, 1)
  ls_crop: &ls_crop [[0, null], [0, null], [16, -36], [46, -10]] # f2
#   ls_crop: &ls_crop [[0, null], [0, null], [32, -72], [92, -20]]  # f4
#   ls_crop: &ls_crop [[0, null], [0, null], [64, -144], [184, -40]]  # f8
  ls_z_min: &ls_z_min 60
  ls_z_max: &ls_z_max 181
  metrics: &metrics
    MSSSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, size_average: true, val_range: null, normalize: false}
    SSIM: {tensor_names: {y_pred: pred, y: ls}, window_size: 11, window: null, size_average: true, full: false, val_range: null}
    NRMSE: {tensor_names: {y_pred: pred, y: ls}}
    PSNR: {tensor_names: {y_pred: pred, y: ls}, data_range: null}
    SmoothL1Loss: {tensor_names: {y_pred: pred, y: ls}}
    MSELoss: {tensor_names: {y_pred: pred, y: ls}}

  eval_batch_size: &eval_batch_size 2
  sample_trfs: &sample_trfs
    - Assert: {apply_to: lf, expected_tensor_shape: [null, 1, null, null]}
    - Resize: {apply_to: ls, shape: [1.0, 1.0, 0.10526315789473684210526315789474, 0.10526315789473684210526315789474], order: 2}  # 2/19=0.10526315789473684210526315789474; 4/19=0.21052631578947368421052631578947; 8/19=0.42105263157894736842105263157895
    - Assert: {apply_to: ls, expected_tensor_shape: [null, 1, 1, null, null]}

  eval_sample_prepr: &eval_sample_prepr
    - Crop: {apply_to: lf, crop: *lf_crop}
    - Crop: {apply_to: ls, crop: *ls_crop}
    - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
    - Normalize01: {apply_to: ls, min_percentile: 5.0, max_percentile: 99.99}
    - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
  eval_batch_prepr: &eval_batch_prepr []
  batch_prepr_in_step: &batch_prepr_in_step
    - Cast: {apply_to: [lfc, ls], dtype: *precision, device: cuda, non_blocking: true}
  batch_postpr: &batch_postpr
    - Assert: {apply_to: pred, expected_tensor_shape: [null, 1, *z_out, null, null]}
    - AffineTransformation:
        apply_to: pred
        target_to_compare_to: ls
        order: 2
        ref_input_shape: [838, 1330, 1615]
        bdv_affine_transformations: [[0.98048,0.004709,0.098297,-111.7542,7.6415e-05,0.97546,0.0030523,-20.1143,0.014629,8.2964e-06,-3.9928,846.8515]]
        ref_output_shape: [241, 1501, 1801]
#         ref_crop_in: [[152, -223], [133, 1121], [323, 1596]]  # 463x988x1273 - 0x0x0 no excess shrinkage
        ref_crop_in: [[152, -223], [133, 1121], [323, 1558]]  # f2: shrinkage lnet: (0, 0)x(0, 0)x(0, -2); shrinkage: -2*19 = -38
#         ref_crop_in: [[152, -223], [133, 1121], [323, 1577]]  # f4: shrinkage lnet: (0, 0)x(0, 0)x(0, -1); shrinkage: -*19 = -19
#         ref_crop_in: [[152, -223], [133, 1121], [323, 1596]]  # f8: shrinkage lnet: (0, 0)x(0, 0)x(0, 0)
        ref_crop_out: [[*ls_z_min, *ls_z_max], [152, -323], [418, -57]]

model:
  name: A04
  kwargs:
    input_name: lfc
    prediction_name: pred
    nnum: *nnum
    z_out: *z_out
    n_res2d: [488, 488, u, 244, 244]
    n_res3d: [[7], [7], [7]]
  checkpoint:

stages:
  - train:
      max_epochs: 500
      metrics: {}
      log:
        TqdmLogger: {}
        TensorBoardLogger:
          scalars_every: {value: 10, unit: iteration}
          tensors_every: {value: 500, unit: iteration}
          tensor_names: [lf, pred, ls]

      criterion:
        name: WeightedSmoothL1Loss
        kwargs: {threshold: 1.0, initial_weight: .1, apply_below_threshold: true, decay_by: .8, every_nth_epoch: 1}
        tensor_names: {input: pred, target: ls}

      optimizer:
        name: Adam
        kwargs: {lr: 1.0e-4, eps: 1.0e-8}

      sampler:
        base: RandomSampler
        drop_last: false

      batch_preprocessing:
        - RandomRotate90: {apply_to: [lf, ls]}
        - ChannelFromLightField: {apply_to: {lf: lfc}, nnum: *nnum}
      batch_preprocessing_in_step: *batch_prepr_in_step
      batch_postprocessing: *batch_postpr

      data:
        - batch_size: 1
          interpolation_order: *interpol
          sample_preprocessing:
            - Crop: {apply_to: lf, crop: *lf_crop}
            - Crop: {apply_to: ls, crop: *ls_crop}
            - Normalize01: {apply_to: lf, min_percentile: 5.0, max_percentile: 99.8}
            - Normalize01: {apply_to: ls, min_percentile: 5.0, max_percentile: 99.99}
            - AdditiveGaussianNoise: {apply_to: lf, sigma: 0.1}
            - AdditiveGaussianNoise: {apply_to: ls, sigma: 0.05}
            - RandomIntensityScale: {apply_to: [lf, ls], factor_min: .8, factor_max: 1.2}
            - RandomlyFlipAxis: {apply_to: [lf, ls], axis: -1}
            - RandomlyFlipAxis: {apply_to: [lf, ls], axis: -2}
          filters: [[z_range, {z_min: *ls_z_min, z_max: *ls_z_max}]]
          datasets:
            - {tensors: {lf: gcamp.g200311_085233_lf, ls: gcamp.g200311_085233_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}

      validate:
        metrics: *metrics
        log:
          TqdmLogger: {}
          TensorBoardLogger:
            scalars_every: {value: 1, unit: epoch}
            tensors_every: {value: 1, unit: epoch}
            tensor_names: [lf, pred, ls]
        score_metric: MSSSIM
        period: {value: 1, unit: epoch}
        patience: 10
        batch_preprocessing: *eval_batch_prepr
        batch_preprocessing_in_step: *batch_prepr_in_step
        batch_postprocessing: *batch_postpr
        data:
          - batch_size: *eval_batch_size
            interpolation_order: *interpol
            sample_preprocessing: *eval_sample_prepr
            filters: [[z_range, {z_min: *ls_z_min, z_max: *ls_z_max}]]
            datasets:
              - {tensors: {lf: gcamp.g200311_090800_lf, ls: gcamp.g200311_090800_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}

  - test:
      metrics: *metrics
      log:
        TqdmLogger: {}
        TensorBoardLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: epoch}
        FileLogger:
          scalars_every: {value: 1, unit: epoch}
          tensors_every: {value: 1, unit: iteration}
          tensor_names: {lf, ls, pred}
      batch_preprocessing: *eval_batch_prepr
      batch_preprocessing_in_step: *batch_prepr_in_step
      batch_postprocessing: *batch_postpr
      data:
        - batch_size: *eval_batch_size
          interpolation_order: *interpol
          sample_preprocessing: *eval_sample_prepr
          filters: [[z_range, {z_min: *ls_z_min, z_max: *ls_z_max}]]
          datasets:
            - {tensors: {lf: gcamp.g200311_083021_lf, ls: gcamp.g200311_083021_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_083419_lf, ls: gcamp.g200311_083419_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_083658_lf, ls: gcamp.g200311_083658_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_083931_lf, ls: gcamp.g200311_083931_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_084207_lf, ls: gcamp.g200311_084207_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_084450_lf, ls: gcamp.g200311_084450_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
            - {tensors: {lf: gcamp.g200311_084729_lf, ls: gcamp.g200311_084729_ls}, interpolation_order: *interpol, sample_transformations: *sample_trfs}
